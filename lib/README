
# Libraries Directory

This directory contains **project-specific modular libraries** for the ESP32 LED Matrix Clock.

## Modular Architecture

This project implements a **professional modular architecture** with separated concerns:

### 📁 **Current Libraries**

#### **`AppStateManager/`**
- **Purpose**: Centralized application state management
- **Files**: `AppStateManager.h`, `AppStateManager.cpp`
- **Responsibilities**: Global state tracking, mode management

#### **`ButtonManager/`**
- **Purpose**: Input handling with advanced debouncing
- **Files**: `ButtonManager.h`, `ButtonManager.cpp`
- **Features**: Button debouncing, repeat functionality, state management

#### **`ClockDisplay/`**
- **Purpose**: Time rendering and formatting system
- **Files**: `ClockDisplay.h`, `ClockDisplay.cpp`
- **Features**: 12/24 hour conversion, text sizing, AM/PM handling

#### **`EffectsEngine/`**
- **Purpose**: Background animation and particle systems
- **Files**: `EffectsEngine.h`, `EffectsEngine.cpp`
- **Effects**: Confetti, Matrix Rain, Weather, Stars, Sparkles, Fireworks

#### **`MatrixDisplayManager/`**
- **Purpose**: Hardware abstraction for HUB75 LED matrix
- **Files**: `MatrixDisplayManager.h`, `MatrixDisplayManager.cpp`
- **Features**: Display control, brightness management, text masking

#### **`MenuSystem/`**
- **Purpose**: Navigation and configuration interface
- **Files**: `MenuSystem.h`, `MenuSystem.cpp`
- **Features**: Menu navigation, live preview, user interface

#### **`SettingsManager/`**
- **Purpose**: Persistent configuration storage
- **Files**: `SettingsManager.h`, `SettingsManager.cpp`
- **Features**: EEPROM persistence, settings validation

## External Dependencies

Managed via `platformio.ini`:

- **`adafruit/Adafruit Protomatter@^1.6.4`** - RGB LED matrix driver
- **`adafruit/RTClib@^2.1.4`** - Real-time clock support
- **`wire`** - I2C communication

## Development Benefits

✅ **Modular Design** - Each library has a single, well-defined purpose
✅ **Code Reusability** - Libraries can be used in other ESP32 projects
✅ **Easy Testing** - Individual modules can be unit tested independently
✅ **Maintainability** - Clear separation makes debugging and updates easier
✅ **Scalability** - New features can be added as separate libraries

```
lib/
├── MatrixEffects/
│   ├── src/
│   │   ├── MatrixEffects.cpp
│   │   └── MatrixEffects.h
│   └── library.json
├── ClockUtilities/
│   ├── src/
│   │   ├── ClockUtilities.cpp
│   │   └── ClockUtilities.h
│   └── library.json
└── README (this file)
```

## Potential Custom Libraries

Consider creating these libraries for better code organization:

- **MatrixEffects** - Background effect system (confetti, rain, fireworks, etc.)
- **ClockUtilities** - Time formatting and display functions
- **MenuSystem** - Navigation and user interface components
- **ColorManager** - Color definitions and brightness control
- **ButtonHandler** - Input processing with debouncing

## Usage

Custom libraries are automatically detected and linked by PlatformIO's Library Dependency Finder.

For more information:
https://docs.platformio.org/page/librarymanager/ldf.html
